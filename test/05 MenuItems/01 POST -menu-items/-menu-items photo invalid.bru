meta {
  name: -menu-items photo invalid
  type: http
  seq: 13
}

post {
  url: {{host}}/menu-items
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "restaurantId": {{firstRestaurantId}},
    "price": {{randomInt}},
    "name": "{{menuName}}",
    "alternateName": "{{menuName}}",
    "alcoholPercentage": {{randomDouble0to3}},
    "photo": "invalid-photo-name",  // Nieprawidłowy format nazwy pliku
    "ingredients": []
  }
  
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 400
  test("Status code is 400 for invalid photo format", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera pole 'errors' i odpowiedni komunikat błędu dla 'photo'
  test("Error response contains message for invalid photo format", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie błędu dla nieprawidłowego formatu 'photo'
      expect(jsonData).to.have.property('errors');
      expect(jsonData.errors).to.have.property('photo');
      expect(jsonData.errors.photo[0]).to.include("Must be a valid Image file upload name");
  });
  
}

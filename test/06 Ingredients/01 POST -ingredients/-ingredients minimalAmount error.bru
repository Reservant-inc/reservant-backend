meta {
  name: -ingredients minimalAmount error
  type: http
  seq: 9
}

post {
  url: {{host}}/ingredients
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "publicName": "{{menuName}}",
    "unitOfMeasurement": "{{unitOfMeasurement}}",
    "minimalAmount": -1,  // Błędna wartość (ujemna)
    "amountToOrder": {{amountToOrder}},
    "amount": {{amountToOrder}},
    "menuItem": {
      "menuItemId": {{randomMenuItemId}},
      "amountUsed": {{randomInt}}
    }
  }
  
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 400
  test("Status code is 400 when 'minimalAmount' is less than zero", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera odpowiednie komunikaty błędów
  test("Error response contains messages for 'minimalAmount' less than zero", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie obecności pola 'errors'
      expect(jsonData).to.have.property('errors');
      
      // Sprawdzenie, czy 'errors' zawiera odpowiednie komunikaty dla 'minimalAmount'
      expect(jsonData.errors['minimalAmount'][0]).to.include("The value must be greater than or equal to zero.");
      expect(jsonData.errorCodes['minimalAmount'][0]).to.include("ValueLessThanZero");
  });
  
}

meta {
  name: -user-events-created
  type: http
  seq: 11
}

get {
  url: {{host}}/user/events-created
  body: none
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

tests {
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Response is JSON", function () {
       res.getHeader('Content-Type', 'application/json');
  });
  
  test("Response body has correct structure and data types", function () {
      const jsonData = res.getBody();
  
      expect(jsonData).to.be.an('array').that.is.not.empty;
  
      jsonData.forEach((event) => {
          expect(event).to.have.property('eventId').that.is.a('number');
          expect(event).to.have.property('description').that.is.a('string');
          expect(event).to.have.property('time').that.is.a('string');
          expect(event).to.have.property('mustJoinUntil').that.is.a('string');
          expect(event).to.have.property('creatorId').that.is.a('string');
          expect(event).to.have.property('creatorFullName').that.is.a('string');
          expect(event).to.have.property('restaurantId').that.is.a('number');
          expect(event).to.have.property('restaurantName').that.is.a('string');
          expect(event).to.have.property('numberInterested').that.is.a('number');
      });
  });
  
}

meta {
  name: -ingredients--ingredientId other-s ingredient
  type: http
  seq: 2
}

put {
  url: {{host}}/ingredients/:ingredientId
  body: json
  auth: bearer
}

params:path {
  ingredientId: {{randomIngredientId}}
}

auth:bearer {
  token: {{PA}}
}

body:json {
  {
    "publicName": "{{randomIngredientName}}",
    "unitOfMeasurement": "{{unitOfMeasurement}}",
    "minimalAmount": {{minimalAmount}},
    "amountToOrder": {{amountToOrder}}
  }
  
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 400
  test("Status code is 400 when user does not have required permissions", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera komunikat o braku uprawnień
  test("Error response contains 'AccessDenied' due to insufficient permissions", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie obecności pola 'errors'
      expect(jsonData).to.have.property('errors');
      
      // Sprawdzenie, czy 'errors' zawiera odpowiednie komunikaty dla braku uprawnień
      expect(jsonData.errors[''][0]).to.include("User must either be a backdoor employee or the owner of the restaurant");
      expect(jsonData.errorCodes[''][0]).to.include("AccessDenied");
  });
  
}

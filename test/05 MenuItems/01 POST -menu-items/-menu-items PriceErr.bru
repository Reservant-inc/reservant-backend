meta {
  name: -menu-items PriceErr
  type: http
  seq: 8
}

post {
  url: {{host}}/menu-items
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "restaurantId": {{firstRestaurantId}},
    "price": "invalid_price",  // Niepoprawny typ danych
    "name": "{{menuName}}",
    "alternateName": "{{menuName}}",
    "alcoholPercentage": {{randomDouble0to3}},
    "photo": "test-jd.png",
    "ingredients": []
  }
  
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 400
  test("Status code is 400 for invalid price and missing menuItem field", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera pole 'errors' i odpowiednie komunikaty błędów
  test("Error response contains messages for invalid price and missing menuItem", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie błędu braku pola 'menuItem'
      expect(jsonData.errors).to.have.property('menuItem');
      expect(jsonData.errors.menuItem[0]).to.include("The menuItem field is required.");
      
      // Sprawdzenie błędu konwersji 'price' do typu Decimal
      expect(jsonData.errors).to.have.property('$.price');
      expect(jsonData.errors["$.price"][0]).to.include("The JSON value could not be converted to System.Decimal");
  });
  
}

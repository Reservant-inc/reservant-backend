meta {
  name: -users--userId--make-restaurant-owner Copy
  type: http
  seq: 3
}

post {
  url: {{host}}/users/:userId/make-restaurant-owner
  body: none
  auth: bearer
}

params:path {
  userId: {{randomString}}
}

auth:bearer {
  token: {{JD}}
}

script:pre-request {
  function generateRandomString(length) {
      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-';
      let result = '';
      const charactersLength = characters.length;
  
      for (let i = 0; i < length; i++) {
          const randomIndex = Math.floor(Math.random() * charactersLength);
          result += characters.charAt(randomIndex);
      }
  
      return result;
  }
  
  const randomString = generateRandomString(20);
  // pm.globals.set("randomString", randomString);
}

tests {
  test("Response status is 404", function () {
      expect(res.getStatus()).to.equal(404);
  });
  
  
}

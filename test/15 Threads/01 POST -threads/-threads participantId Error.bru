meta {
  name: -threads participantId Error
  type: http
  seq: 3
}

post {
  url: {{host}}/threads
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "title": "Test",
    "participantIds": [
      "{{randomFirstName}}"
    ]
  }
}

tests {
  // Pobierz odpowiedź z serwera
  var jsonData = res.getBody();
  
  // Test, czy status kod jest 400
  test("Status code is 400", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  test("Response is not empty", function () {
      expect(res.getBody()?.toString()).not.to.be.empty;
  });
  
  test("Response has a JSON body", function () {
  //     expect(pm.response.headers.get("Content-Type")).to.include("application/json");
  });
  
  // // Test, czy 'errors' zawiera wiadomość o nieprawidłowym participantsIds
  // test("Error contains message for participantIds", function () {
  //     expect(jsonData.errors).to.have.property('participantIds')
  //     expect(jsonData.errors.participantIds[0]).to.equal( "The request field is required.")
    
  // });
}

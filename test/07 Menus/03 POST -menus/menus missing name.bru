meta {
  name: menus missing name
  type: http
  seq: 9
}

post {
  url: {{host}}/menus
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "restaurantId": {{randomRestaurantId}},
    "name": "",
    "alternateName": "{{$randomStreetName}}",
    "menuType": "{{randomMenuType}}",
    "dateFrom": "{{formattedDate}}",
    "dateUntil": "{{randomFutureDate}}",
    "photo": "test-jd.png"
  }
  
}

tests {
  // 1. Sprawdzenie, czy odpowiedź ma status 400
  test("Status code is 400", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // 2. Sprawdzenie, czy errorCodes zawiera 'NotEmptyValidator'
  test("Error response contains 'NotEmptyValidator' in errorCodes", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie, czy odpowiedź zawiera pole 'errorCodes'
      expect(jsonData).to.have.property('errorCodes');
      
      // Sprawdzenie, czy errorCodes zawiera 'NotEmptyValidator'
      expect(jsonData.errorCodes).to.have.property('name');
      expect(jsonData.errorCodes.name).to.include("NotEmptyValidator");
  });
  
}

meta {
  name: menus other-s menu
  type: http
  seq: 6
}

post {
  url: {{host}}/menus
  body: json
  auth: bearer
}

auth:bearer {
  token: {{PA}}
}

body:json {
  {
    "restaurantId": {{randomRestaurantId}},
    "name": "{{$randomStreetName}}",
    "alternateName": "{{$randomStreetName}}",
    "menuType": "{{randomMenuType}}",
    "dateFrom": "{{formattedDate}}",
    "dateUntil": "{{randomFutureDate}}",
     "photo": "test-jd.png"
  }
}

tests {
  // 1. Sprawdzenie, czy odpowiedź ma status 400
  test("Status code is 400 for unauthorized restaurant access", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // 2. Sprawdzenie, czy odpowiedź zawiera wymagane elementy 'status', 'errors' i 'errorCodes'
  test("Error response contains required elements for unauthorized restaurant access", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie, czy odpowiedź zawiera pole 'status'
      expect(jsonData).to.have.property('status');
      expect(jsonData.status).to.eql(400);
      
      // Sprawdzenie, czy odpowiedź zawiera pole 'errors'
      expect(jsonData).to.have.property('errors');
      expect(jsonData.errors).to.have.property('restaurantId');
      
      // Sprawdzenie, czy odpowiedź zawiera pole 'errorCodes'
      expect(jsonData).to.have.property('errorCodes');
      expect(jsonData.errorCodes).to.have.property('restaurantId');
  });
  
  // 3. Sprawdzenie, czy odpowiedź zawiera odpowiedni błąd dla braku uprawnień
  test("Response contains error message for unauthorized restaurant access", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie, czy pole 'errors' zawiera odpowiedni komunikat błędu dla braku uprawnień do restauracji
      expect(jsonData.errors.restaurantId[0]).to.include("User is not the owner of the restaurant with ID:");
  });
  
  // 4. Sprawdzenie, czy odpowiedź zawiera odpowiedni kod błędu 'AccessDenied' dla braku uprawnień
  test("Response contains error code 'AccessDenied' for unauthorized restaurant access", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie, czy pole 'errorCodes' zawiera odpowiedni kod błędu dla braku uprawnień do restauracji
      expect(jsonData.errorCodes.restaurantId[0]).to.include("AccessDenied");
  });
  
}

meta {
  name: -menu-items restaurantId missing
  type: http
  seq: 6
}

post {
  url: {{host}}/menu-items
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "price": {{randomInt}},
    "name": "{{menuName}}",
    "alternateName": "{{menuName}}",
    "alcoholPercentage": {{randomDouble0to3}},
    "photo": "test-jd.png",
    "ingredients": []
  }
  
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 400
  test("Status code is 400 when restaurantId is missing", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera pole 'errors' i odpowiedni komunikat błędu dla 'restaurantId'
  test("Error response contains 'restaurantId' not found message", function () {
      var jsonData = res.getBody();
      expect(jsonData).to.have.property('errors');
      expect(jsonData.errors).to.have.property('$');
      expect(jsonData.errors.$[0]).to.include("JSON deserialization for type 'Reservant.Api.Dtos.MenuItems.CreateMenuItemRequest' was missing required properties, including the following: restaurantId");
  });
  
}

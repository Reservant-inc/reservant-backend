meta {
  name: -user-visits
  type: http
  seq: 9
}

get {
  url: {{host}}/user/visits
  body: none
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

tests {
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Response is JSON", function () {
  //     pm.response.to.be.json;
  });
  
  test("Response body has correct structure and data types", function () {
      const jsonData = res.getBody();
  
      expect(jsonData).to.have.property('page').that.is.a('number');
      expect(jsonData).to.have.property('totalPages').that.is.a('number');
      expect(jsonData).to.have.property('perPage').that.is.a('number');
      expect(jsonData).to.have.property('orderByOptions').that.is.an('array');
  
      expect(jsonData).to.have.property('items').that.is.an('array').that.is.not.empty;
  
      jsonData.items.forEach((item) => {
          expect(item).to.have.property('visitId').that.is.a('number');
          expect(item).to.have.property('date').that.is.a('string');
          expect(item).to.have.property('numberOfPeople').that.is.a('number');
          expect(item).to.have.property('deposit').that.is.a('number');
          expect(item).to.have.property('takeaway').that.is.a('boolean');
          expect(item).to.have.property('clientId').that.is.a('string');
          expect(item).to.have.property('restaurantId').that.is.a('number');
      });
  });
  
}

meta {
  name: menus invalid type
  type: http
  seq: 11
}

post {
  url: {{host}}/menus
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "restaurantId": {{randomRestaurantId}},
    "name": "{{$randomStreetName}}",
    "alternateName": "{{$randomStreetName}}",
    "menuType": "InvalidType",
    "dateFrom": "{{formattedDate}}",
    "dateUntil": "{{randomFutureDate}}",
    "photo": "test-jd.png"
  }
  
}

tests {
  // 1. Sprawdzenie, czy odpowiedź ma status 400
  test("Status code is 400 for invalid 'menuType'", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // 2. Sprawdzenie, czy odpowiedź zawiera wymagane elementy 'status' i 'errors'
  test("Error response contains required elements for invalid 'menuType'", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie, czy odpowiedź zawiera pole 'status'
      expect(jsonData).to.have.property('status');
      expect(jsonData.status).to.eql(400);
      
      // Sprawdzenie, czy odpowiedź zawiera pole 'errors'
      expect(jsonData).to.have.property('errors');
      expect(jsonData.errors).to.have.property('req');
      expect(jsonData.errors).to.have.property('$.menuType');
  });
  
  // 3. Sprawdzenie, czy odpowiedź zawiera odpowiedni błąd dla nieprawidłowego 'menuType'
  test("Response contains error message for invalid 'menuType'", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie, czy pole 'errors' zawiera odpowiedni komunikat błędu dla nieprawidłowego 'menuType'
      expect(jsonData.errors['$.menuType'][0]).to.include("The JSON value could not be converted to Reservant.Api.Models.Enums.MenuType");
  });
  
}

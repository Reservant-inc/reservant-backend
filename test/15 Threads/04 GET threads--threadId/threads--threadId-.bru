meta {
  name: threads--threadId-
  type: http
  seq: 1
}

get {
  url: {{host}}/threads/:id
  body: none
  auth: bearer
}

params:path {
  id: 1
}

auth:bearer {
  token: {{JD}}
}

tests {
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Response is not empty", function () {
      expect(res.getBody()?.toString()).not.to.be.empty;
  });
  
  test("Response has a JSON body", function () {
  //     expect(pm.response.headers.get("Content-Type")).to.include("application/json");
  });
  
  const response = res.getBody();
  test("Response has correct output types", function () {
      expect(response).to.have.property("threadId").that.is.a("number");
      expect(response).to.have.property("title").that.is.a("string");
      expect(response.title).to.equal("Watek Testowy"); // Dodatkowy test na wartość tytułu
      expect(response).to.have.property("participants").that.is.an("array");
  
      response.participants.forEach(participant => {
          expect(participant).to.have.property("userId").that.is.a("string");
          expect(participant).to.have.property("firstName").that.is.a("string");
          expect(participant).to.have.property("lastName").that.is.a("string");
          expect(participant).to.have.property("photo").that.is.null;
      });
  });
  
  
}

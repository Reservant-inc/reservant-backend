meta {
  name: -menu-items--itemId- unauthorized
  type: http
  seq: 4
}

get {
  url: {{host}}/menu-items/:id
  body: none
  auth: none
}

params:path {
  id: {{randomMenuItemId}}
}

script:pre-request {
  // Pobranie listy 'menuItemIdsList' ze zmiennych środowiskowych
  let menuItemIdsList = bru.getEnvVar("menuItemIdsList");
  
  // Sprawdzenie, czy lista istnieje
  if (menuItemIdsList) {
      // Parsowanie listy ze stringa JSON na tablicę
      menuItemIdsList = JSON.parse(menuItemIdsList);
      
      // Sprawdzenie, czy lista nie jest pusta
      if (menuItemIdsList.length > 0) {
          // Losowanie indeksu
          const randomIndex = Math.floor(Math.random() * menuItemIdsList.length);
          
          // Pobranie losowego 'menuItemId' z listy
          const randomMenuItemId = menuItemIdsList[randomIndex];
          
          // Zapisanie losowego 'menuItemId' do zmiennej środowiskowej
          bru.setEnvVar("randomMenuItemId", randomMenuItemId);
          console.log("Randomly selected menuItemId:", randomMenuItemId);
      } else {
          console.log("MenuItemIdsList is empty.");
      }
  } else {
      console.log("MenuItemIdsList does not exist.");
  }
  
}

tests {
  test("Status code is 401", function () {
      expect(res.getStatus()).to.equal(401);
  });
}

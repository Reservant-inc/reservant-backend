meta {
  name: Missing Name
  type: http
  seq: 11
}

put {
  url: {{host}}/menu-items/:id
  body: json
  auth: bearer
}

params:path {
  id: {{newMenuItemId}}
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "price": {{randomInt}},
    "alternateName": "{{menuName}}",
    "alcoholPercentage": {{randomDouble0to3}},
    "photo": "test-jd.png",
      "ingredients": []
  }
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 400
  test("Status code is 400 when required fields are missing", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera pole 'errors' i odpowiednie komunikaty błędów
  test("Error response contains messages for missing required fields", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie błędu deserializacji dla braku pola 'name'
      expect(jsonData.errors).to.have.property('$');
      expect(jsonData.errors['$'][0]).to.include("JSON deserialization for type 'Reservant.Api.Dtos.MenuItems.UpdateMenuItemRequest' was missing required properties, including the following: name");
      
      // Sprawdzenie błędu dla braku pola 'request'
      expect(jsonData.errors).to.have.property('request');
      expect(jsonData.errors.request[0]).to.include("The request field is required.");
      
      // Sprawdzenie błędu dla pustego 'menuItemId'
      expect(jsonData.errors).to.have.property('menuItemId');
  });
  
}

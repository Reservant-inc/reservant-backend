meta {
  name: my-restaurant-groups
  type: http
  seq: 1
}

get {
  url: {{host}}/my-restaurant-groups
  body: none
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

tests {
  // 1. Sprawdzenie statusu odpowiedzi
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  // 2. Sprawdzenie, czy odpowiedź jest w formacie JSON i zawiera listę grup restauracji
  test("Response is a JSON array", function () {
      var jsonData = res.getBody();
      expect(jsonData).to.be.an('array');
  });
  
  // 3. Sprawdzenie struktury każdego obiektu grupy restauracji
  test("Each restaurant group object has required fields", function () {
      var jsonData = res.getBody();
  
      jsonData.forEach(group => {
          expect(group).to.have.property('restaurantGroupId').that.is.a('number');
          expect(group).to.have.property('name').that.is.a('string');
          expect(group).to.have.property('restaurantCount').that.is.a('number');
      });
  });
  
  // 4. Zapisanie listy restaurantGroupId do środowiska
  test("Save list of restaurantGroupId to environment", function () {
      var jsonData = res.getBody();
      var groupIds = jsonData.map(group => group.restaurantGroupId);
      
      bru.setEnvVar("restaurantGroupIds", JSON.stringify(groupIds));
      console.log("Saved restaurantGroupIds to environment:", groupIds);
  });
  
}

meta {
  name: Missing Alternate Name
  type: http
  seq: 12
}

put {
  url: {{host}}/menu-items/:id
  body: json
  auth: bearer
}

params:path {
  id: {{newMenuItemId}}
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "price": {{randomInt}},
    "name": "{{menuName}}",
    "alcoholPercentage": {{randomDouble0to3}},
    "photo": "test-jd.png",
      "ingredients": []
  }
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 200 (lub inny oczekiwany status dla poprawnych danych)
  test("Status code is 200 for valid data with alternateName as null", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera wszystkie oczekiwane pola
  test("Response has all expected fields with alternateName as null", function () {
      var jsonData = res.getBody();
      
      expect(jsonData).to.have.property('menuItemId');
      expect(jsonData).to.have.property('price');
      expect(jsonData).to.have.property('name');
      expect(jsonData).to.have.property('alternateName');
      expect(jsonData).to.have.property('alcoholPercentage');
      expect(jsonData).to.have.property('photo');
      expect(jsonData).to.have.property('ingredients');
  
      // Sprawdzenie, czy 'alternateName' jest null
      expect(jsonData.alternateName).to.be.null;
  });
  
}

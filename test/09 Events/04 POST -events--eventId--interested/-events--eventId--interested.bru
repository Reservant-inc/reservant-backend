meta {
  name: -events--eventId--interested
  type: http
  seq: 1
}

post {
  url: {{host}}/events/:eventId/interested
  body: none
  auth: bearer
}

params:path {
  eventId: 1
}

auth:bearer {
  token: {{JD}}
}

tests {
  test("Status code is 204", function () {
      expect(res.getStatus()).to.equal(204);
  });
  
  test("Response body is empty", function () {
  //     pm.response.to.have.body("");
  });
  
  // Pobierz aktualną listę interestedInEventsIdsList ze zmiennej środowiskowej
  var interestedInEventsIdsList = bru.getEnvVar("interestedInEventsIdsList");
  
  // Konwertuj listę na tablicę, jeśli jest w formacie string
  interestedInEventsIdsList = interestedInEventsIdsList ? interestedInEventsIdsList.split(',') : [];
  
  // Pobierz wartość randomEventId
  var randomEventId = bru.getEnvVar("randomEventId");
  
  // Sprawdź, czy randomEventId już nie znajduje się na liście
  if (!interestedInEventsIdsList.includes(randomEventId)) {
      // Dodaj randomEventId do listy
      interestedInEventsIdsList.push(randomEventId);
  
      // Zaktualizuj listę w środowisku
      bru.setEnvVar("interestedInEventsIdsList", interestedInEventsIdsList.join(','));
  
      console.log("Added eventId:", randomEventId, "to interestedInEventsIdsList");
  } else {
      console.log("EventId", randomEventId, "is already in interestedInEventsIdsList");
  }
  
}

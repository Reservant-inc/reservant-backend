meta {
  name: auth-register-restaurant-employee too short password error
  type: http
  seq: 8
}

post {
  url: {{host}}/auth/register-restaurant-employee
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "login": "{{randomLogin}}",
    "firstName": "{{randomFirstName}}",
    "lastName": "{{randomLastName}}",
    "phoneNumber": "{{randomPhoneNumber}}",
    "birthDate": "{{randomBirthDate}}",
    "password": "short"  // Za krótkie hasło
  }
  
}

tests {
  // Sprawdzenie, czy odpowiedź ma status 400
  test("Status code is 400", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Sprawdzenie, czy odpowiedź zawiera wymagane elementy 'status', 'errors' i 'errorCodes'
  test("Error response contains required elements", function () {
      var jsonData = res.getBody();
      expect(jsonData).to.have.property('status');
      expect(jsonData).to.have.property('errors');
      expect(jsonData).to.have.property('errorCodes');
  });
  
  // Test sprawdzający, czy hasło jest niepoprawne i zwraca odpowiedni błąd
  test("password requirements not met", function () {
      var responseData = res.getBody();
  
      expect(responseData.errors).to.have.property('');
      expect(responseData.errors[""]).to.include.members([
          "Passwords must be at least 6 characters.",
          "Passwords must have at least one non alphanumeric character.",
          "Passwords must have at least one digit ('0'-'9').",
          "Passwords must have at least one uppercase ('A'-'Z')."
      ]);
  
      expect(responseData.errorCodes).to.have.property('');
      expect(responseData.errorCodes[""]).to.include.members([
          "IdentityError",
          "IdentityError",
          "IdentityError",
          "IdentityError"
      ]);
  });
  
  // Sprawdzenie, czy dane odpowiedzi są zgodne z danymi żądania (dla poprawnych danych)
  var jsonData = res.getBody();
  var sentData = req.body?.Data;
  
  test("Response data matches request data", function () {
      expect(jsonData.Data).to.eql(sentData);
  });
  
}

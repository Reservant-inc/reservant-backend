meta {
  name: auth-register-customer-support-agent phone Error
  type: http
  seq: 5
}

post {
  url: {{host}}/auth/register-customer-support-agent
  body: json
  auth: none
}

body:json {
  {
    "firstName": "{{randomFirstName}}",
    "lastName": "{{randomLastName}}",
    "email": "{{randomEmail}}",
    "phoneNumber": "12345abc",
    "password": "{{randomPassword}}",
    "isManager": {{randomBoolean}}
  }
  
}

tests {
  // Sprawdzenie, czy odpowiedź ma status 400
  test("Status code is 400", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Sprawdzenie, czy odpowiedź zawiera wymagane elementy 'status' i 'errors'
  test("Error response contains required elements", function () {
      var jsonData = res.getBody();
      expect(jsonData).to.have.property('status');
      expect(jsonData).to.have.property('errors');
  });
  
  // Test sprawdzający, czy pole 'phoneNumber' jest niepoprawne i zwraca odpowiedni błąd
  test("PhoneNumber format is invalid", function () {
      var responseData = res.getBody();
      expect(responseData.errors).to.have.property('phoneNumber');
      expect(responseData.errors.phoneNumber[0]).to.include("The PhoneNumber field is not a valid phone number.");
  });
  
  // Sprawdzenie, czy dane odpowiedzi są zgodne z danymi żądania (dla poprawnych danych)
  var jsonData = res.getBody();
  var sentData = req.body?.Data;
  
  test("Response data matches request data", function () {
      expect(jsonData.Data).to.eql(sentData);
  });
  
}

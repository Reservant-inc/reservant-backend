meta {
  name: Invalid Name
  type: http
  seq: 9
}

put {
  url: {{host}}/menu-items/:id
  body: json
  auth: bearer
}

params:path {
  id: {{randomMenuItemId}}
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "price": {{randomInt}}, 
    "name": "@$$$$$$$$NHJKGGHNUIHI (*U",
    "alternateName": "{{menuName}}",
    "alcoholPercentage": {{randomDouble0to3}},
    "photo": "test-jd.png",
      "ingredients": []
  }
}

tests {
  // Test sprawdzający, czy odpowiedź ma status 400
  test("Status code is 400 for 'name' exceeding maximum length", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  // Test sprawdzający, czy odpowiedź zawiera pole 'errors' i odpowiedni komunikat błędu dla 'name'
  test("Error response contains message for 'name' exceeding maximum length", function () {
      var jsonData = res.getBody();
      
      // Sprawdzenie błędu dla długości 'name' przekraczającej maksymalny dozwolony limit
      expect(jsonData).to.have.property('errors');
      expect(jsonData.errors).to.have.property('name');
      expect(jsonData.errors.name[0]).to.include("The length of 'Name' must be 20 characters or fewer. You entered 25 characters.");
  });
  
}

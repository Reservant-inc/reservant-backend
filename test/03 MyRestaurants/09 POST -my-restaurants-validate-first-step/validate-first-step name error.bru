meta {
  name: validate-first-step name error
  type: http
  seq: 7
}

post {
  url: {{host}}/my-restaurants/validate-first-step
  body: json
  auth: bearer
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "name": "",
    "nip": "{{randomNIP}}",
    "restaurantType": "{{randomRestaurantType}}",
    "address": "{{randomStreetAddress}}",
    "postalIndex": "{{randomPostalCode}}",
    "city": "{{randomCity}}",
    "groupId": {{randomRestaurantGroupId}}
  }
}

tests {
  test("Status code is 400 for invalid name", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  test("Response contains error for invalid name", function () {
      var jsonData = res.getBody();
      expect(jsonData).to.have.property('errors');
      expect(jsonData.errors).to.have.property('name');
      expect(jsonData.errors.name[0]).to.include("'Name' must not be empty.");
  });
  
}

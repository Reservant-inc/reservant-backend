meta {
  name: Success
  type: http
  seq: 1
}

put {
  url: {{host}}/menu-items/:id
  body: json
  auth: bearer
}

params:path {
  id: {{randomMenuItemId}}
}

auth:bearer {
  token: {{JD}}
}

body:json {
  {
    "price": {{randomInt}},
    "name": "{{menuName}}",
    "alternateName": "{{menuName}}",
    "alcoholPercentage": {{randomDouble0to3}},
    "photo": "test-jd.png",
      "ingredients": []
  }
}

tests {
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Response is not empty", function () {
      expect(res.getBody()?.toString()).not.to.be.empty;
  });
  
  test("Response has a JSON body", function () {
  //     expect(pm.response.headers.get("Content-Type")).to.include("application/json");
  });
  
  const response = res.getBody();
  test("Response has correct output types", function () {
      expect(response).to.have.property("menuItemId").that.is.a("number");
      expect(response).to.have.property("price").that.is.a("number");
      expect(response).to.have.property("name").that.is.a("string");
      expect(response).to.have.property("alternateName");
      expect(response.alternateName === null || typeof response.alternateName === 'string').to.be.true;
      expect(response).to.have.property("alcoholPercentage");
      expect(response.alcoholPercentage === null || typeof response.alcoholPercentage === 'number').to.be.true;
       expect(response).to.have.property("photo").that.is.a("string");
  });
  
  
}
